syntax = "proto3";

package com.google.startupos.tools.reviewer.job.sync;

option java_package = "com.google.startupos.tools.reviewer.job.sync";
option java_outer_classname = "GithubProtos";

import "tools/reviewer/job/sync/full_github_pr.proto";
// TODO: Delete unused messages
// GitHub User
// message User {
//  int64 id = 1;
//  string email = 2;
//  string name = 3;
//  string login = 4;
//}

message UserRequest { string login = 1; }

message UserResponse { User user = 1; }

// GitHub File
message File {
  string sha = 1;
  string filename = 2;
  string status = 3;
  string patch = 4;
  int32 changes = 5;
}

message PullRequestFilesRequest {
  string owner = 1;
  string repo = 2;
  int64 number = 3;
}

message PullRequestFilesResponse { repeated File files = 1; }

// message GithubComment {
//  int64 id = 1;
//  string body = 2;
//  string created_at = 3;
//  string updated_at = 4;
//  User user = 5;
//  int32 position = 6;
//  int32 original_position = 7;
//  string diff_hunk = 8;
//  string path = 9;
//  string commit_id = 10;
//  string original_commit_id = 11;
//}

message CommentsRequest {
  string owner = 1;
  string repo = 2;
  int64 number = 3;
}

message IssueCommentsResponse { repeated IssueComment issue_comment = 1; }

message CreateReviewCommentRequest {
  string owner = 1;
  string repo = 2;
  int64 diff_number = 3;
  CreateReviewCommentRequestData request_data = 4;
}

message CreateReviewCommentRequestData {
  string body = 1;
  string commit_id = 2;
  string path = 3;
  int32 position = 4;
  int32 in_reply_to = 5;
}

message CreateIssueCommentRequest {
  string owner = 1;
  string repo = 2;
  int64 number = 3;
  CreateIssueCommentRequestData request_data = 4;
}

message CreateIssueCommentRequestData { string body = 1; }

message ReviewsRequest {
  string owner = 1;
  string repo = 2;
  int64 number = 3;
}

message ReviewsResponse { repeated Review reviews = 1; }

message ReviewCommentsRequest {
  string owner = 1;
  string repo = 2;
  int64 number = 3;
  int64 review_id = 4;
}

message ReviewCommentsResponse { repeated ReviewComment review_comments = 1; }

message PullRequestRequest {
  string owner = 1;
  string repo = 2;
  int64 number = 3;
}

message PullRequestResponse { PullRequest pull_request = 1; }

message CreatePullRequestRequest {
  string owner = 1;
  string repo = 2;
  CreatePullRequestRequestData request_data = 3;
}

message CreatePullRequestRequestData {
  string title = 1;
  string head = 2;
  string base = 3;
  string body = 4;
}

message CreatePullRequestResponse { PullRequest pull_request = 1; }

message PullRequestsRequest {
  string owner = 1;
  string repo = 2;
}

message PullRequestsResponse { repeated PullRequest pull_requests = 1; }

message CreatePullRequestReviewRequest {
  string owner = 1;
  string repo = 2;
  int64 number = 3;
  CreatePullRequestReviewRequestData request_data = 4;
}

message CreatePullRequestReviewRequestData {
  string commit_id = 1;
  //  required field
  string body = 2;
  string event = 3;
  repeated ReviewCommentRequestData comments = 4;
}

message ReviewCommentRequestData {
  string path = 1;
  int64 position = 2;
  string body = 3;
}